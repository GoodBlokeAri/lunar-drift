{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;sBAAc,QAAQ;;;;oBACL,QAAQ;;;;IAEnB,KAAK;AACE,WADP,KAAK,CACG,IAAI,EAAE;0BADd,KAAK;;AAEP,QAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,QAAI,CAAC,IAAI,EAAE;AACT,aAAO,IAAI,CAAC;KACb;;AAED,QAAI,IAAI,YAAY,KAAK,EAAE;AACzB,aAAO,oBAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC5B,MAAM,IAAI,IAAI,YAAY,IAAI,EAAE;AAC/B,UAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,UAAI,CAAC,KAAK,GAAG,oBAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3B,aAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC3B,MAAM;AACL,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;AAC3B,UAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;AAC7B,UAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACzB,UAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AACxB,UAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AAC3B,aAAO,IAAI,CAAC;KACb;GAEF;;eAtBG,KAAK;;WAwBH,kBAAG;AACP,UAAI,IAAI,CAAC,KAAK,EAAE;AACd,eAAO,IAAI,CAAC,KAAK,CAAC;OACnB;;AAED,aAAO,cAAc,CAAC;KACvB;;;WAEM,iBAAC,IAAI,EAAE;AACZ,aAAO,IAAI,CAAC;KACb;;;WAEM,mBAAG;AACR,aAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;WAEQ,qBAAG;AACV,aAAO,KAAK,CAAC;KACd;;;WAEK,kBAAG;AACP,aAAO,WAAW,CAAC;KACpB;;;WAEK,kBAAG;AACP,aAAO,oBAAE,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;KACvD;;;WAEO,oBAAG;AACT,aAAO,IAAI,CAAC,MAAM,EAAE,CAAC;KACtB;;;SAtDG,KAAK;;;AAyDX,IAAI,KAAK,GAAG,eAAS,IAAI,EAAE;AACzB,MAAI,CAAC,IAAI,EAAE;AACT,QAAI,GAAG,IAAI,IAAI,EAAE,CAAC;GACnB,MAAM,IAAI,IAAI,YAAY,IAAI,IAAI,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,MAAM,EAAE;AAClF,QAAI,GAAG,IAAI,CAAC;GACb,MAAM;AACL,UAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;GAC/E;;AAED,SAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;CACxB,CAAC;;AAEF,OAAO,CAAC,GAAG,CAAC,kBAAK,MAAM,CAAC,CAAC;;qBAEV,KAAK","file":"index.js","sourcesContent":["import _ from 'lodash';\nimport data from './data';\n\nclass Lunar {\n  constructor(date) {\n    this._isValid = false;\n    if (!date) {\n      return this;\n    }\n\n    if (date instanceof Lunar) {\n      return _.clone(date, true);\n    } else if (date instanceof Date) {\n      this._isValid = true;\n      this._date = _.clone(date);\n      return this.convert(date);\n    } else {\n      this.year = date.year >> 0;\n      this.month = date.month >> 0;\n      this.day = date.day >> 0;\n      this.leap = !!date.leap;\n      this._date = this.toDate();\n      return this;\n    }\n\n  }\n\n  toDate() {\n    if (this._date) {\n      return this._date;\n    }\n\n    return 'Invalid Date';\n  }\n\n  convert(date) {\n    return this;\n  }\n\n  isValid() {\n    return this._isValid;\n  }\n\n  _validate() {\n    return false;\n  }\n\n  format() {\n    return '农历乙未年三月初一';\n  }\n\n  toJSON() {\n    return _.pick(this, ['year', 'month', 'day', 'leap']);\n  }\n\n  toString() {\n    return this.format();\n  }\n}\n\nvar lunar = function(date) {\n  if (!date) {\n    date = new Date();\n  } else if (date instanceof Date || date instanceof Lunar || date instanceof Object) {\n    date = date;\n  } else {\n    throw new Error('date parameter must be Date/Lunar instance or plain Object');\n  }\n\n  return new Lunar(date);\n};\n\nconsole.log(data.length);\n\nexport default lunar;\n"],"sourceRoot":"/source/"}