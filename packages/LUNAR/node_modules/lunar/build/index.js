'use strict';

var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };

var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _import = require('lodash');

var _import2 = _interopRequireWildcard(_import);

var _data = require('./data');

var _data2 = _interopRequireWildcard(_data);

var Lunar = (function () {
  function Lunar(date) {
    _classCallCheck(this, Lunar);

    this._isValid = false;
    if (!date) {
      return this;
    }

    if (date instanceof Lunar) {
      return _import2['default'].clone(date, true);
    } else if (date instanceof Date) {
      this._isValid = true;
      this._date = _import2['default'].clone(date);
      return this.convert(date);
    } else {
      this.year = date.year >> 0;
      this.month = date.month >> 0;
      this.day = date.day >> 0;
      this.leap = !!date.leap;
      this._date = this.toDate();
      return this;
    }
  }

  _createClass(Lunar, [{
    key: 'toDate',
    value: function toDate() {
      if (this._date) {
        return this._date;
      }

      return 'Invalid Date';
    }
  }, {
    key: 'convert',
    value: function convert(date) {
      return this;
    }
  }, {
    key: 'isValid',
    value: function isValid() {
      return this._isValid;
    }
  }, {
    key: '_validate',
    value: function _validate() {
      return false;
    }
  }, {
    key: 'format',
    value: function format() {
      return '农历乙未年三月初一';
    }
  }, {
    key: 'toJSON',
    value: function toJSON() {
      return _import2['default'].pick(this, ['year', 'month', 'day', 'leap']);
    }
  }, {
    key: 'toString',
    value: function toString() {
      return this.format();
    }
  }]);

  return Lunar;
})();

var lunar = function lunar(date) {
  if (!date) {
    date = new Date();
  } else if (date instanceof Date || date instanceof Lunar || date instanceof Object) {
    date = date;
  } else {
    throw new Error('date parameter must be Date/Lunar instance or plain Object');
  }

  return new Lunar(date);
};

console.log(_data2['default'].length);

exports['default'] = lunar;
module.exports = exports['default'];
//# sourceMappingURL=index.js.map