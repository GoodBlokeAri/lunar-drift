import _ from 'lodash';
import data from './data';

class Lunar {
  constructor(date) {
    this._isValid = false;
    if (!date) {
      return this;
    }

    if (date instanceof Lunar) {
      return _.clone(date, true);
    } else if (date instanceof Date) {
      this._isValid = true;
      this._date = _.clone(date);
      return this.convert(date);
    } else {
      this.year = date.year >> 0;
      this.month = date.month >> 0;
      this.day = date.day >> 0;
      this.leap = !!date.leap;
      this._date = this.toDate();
      return this;
    }

  }

  toDate() {
    if (this._date) {
      return this._date;
    }

    return 'Invalid Date';
  }

  convert(date) {
    return this;
  }

  isValid() {
    return this._isValid;
  }

  _validate() {
    return false;
  }

  format() {
    return '农历乙未年三月初一';
  }

  toJSON() {
    return _.pick(this, ['year', 'month', 'day', 'leap']);
  }

  toString() {
    return this.format();
  }
}

var lunar = function(date) {
  if (!date) {
    date = new Date();
  } else if (date instanceof Date || date instanceof Lunar || date instanceof Object) {
    date = date;
  } else {
    throw new Error('date parameter must be Date/Lunar instance or plain Object');
  }

  return new Lunar(date);
};

console.log(data.length);

export default lunar;
